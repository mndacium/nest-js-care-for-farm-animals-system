name: deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: Image version
        type: string
        required: true
  workflow_call:
    inputs:
      version:
        description: Image version
        type: string
        required: true

jobs:
  push_images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ vars.IMAGE_NAME }}:latest
            ${{ vars.IMAGE_NAME }}:${{ inputs.version }}

  deploy_container:
    runs-on: ubuntu-latest
    needs: push_images

    steps:
      - name: run newly created image using ssh
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_SSH_HOST }}
          username: ${{ secrets.SERVER_SSH_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            docker pull ${{ vars.IMAGE_NAME }}:latest
            cd ${{ vars.SERVER_APP_DIR }}
            docker run -d -p ${{ secrets.SERVER_PORT }}:${{ secrets.SERVER_PORT }} \
              -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
              -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
              -e POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
              ${{ vars.IMAGE_NAME }}:latest
            docker image prune -a -f
